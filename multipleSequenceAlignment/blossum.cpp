#include <iostream>
#include <map>

std::map<char, int> codeMap = {
	{'A', 0},
	{'R', 1},
	{'N', 2},
	{'D', 3},
	{'C', 4},
	{'Q', 5},
	{'E', 6},
	{'G', 7},
	{'H', 8},
	{'I', 9},
	{'L', 10},
	{'K', 11},
	{'M', 12},
	{'F', 13},
	{'P', 14},
	{'S', 15},
	{'T', 16},
	{'W', 17},
	{'Y', 18},
	{'V', 19}
};
int blossum62[20][20] = {
	{4},
	{-1, 5},
	{-2, 0, 6},
	{-2, -2, 1, 6},
	{0, -3, -3, -3, 9},
	{-1, 1, 0, 0, -3, 5},
	{-1, 0, 0, 2, -4, 2, 5},
	{0, -2, 0, -1, -3, 0, 0, -2, 8},
	{-1, -3, -3, -3, -1, -3, -3, -4, -3, 4},
	{-1, -2, -3, -4, -1, -2, -3, -4, -3, 2, 4},
	{-1, 2, 0, -1, -3, 1, 1, -2, -1, -3, -2, 5},
	{-1, -1, -2, -3, -1, 0, -2, -3, -2, 1, 2, -1, 5},
	{-2, -3, -3, -3, -2, -3, -3, -3, -1, 0, 0, -3, 0, 6},
	{-1, -2, -2, -1, -3, -1, -1, -2, -2, -3, -3, -1, -2, -4, 7},
	{1, -1, 1, 0, -1, 0, 0, 0, -1, -2, -2, 0, -1, -2, -1, -4},
	{0, -1, 0, -1, -1, -1, -1, -2, -2, -1, -1, -1, -1, -2, -1, 1, 5},
	{-3, -3, -4, -4, -2, -2, -3, -2, -2, -3, -2, -3, -1, 1, -4, -3, -2, 11},
	{-2, -2, -2, -3, -2, -1, -2, -3, 2, -1, -1, -2, -1, 3, -3, -2, -2, 2, 7},
	{0, -3, -3, -3, -1, -2, -2, -3, -3, 3, 1, -2, 1, -1, -2, -2, 0, -3, -1, 4}
};

int getBlossumValues(char a, char b, int gapPenalty) {
	if(a == '-' || b == '-') {
		return 0;
	}

	if(codeMap.find(a) == codeMap.end() || codeMap.find(b) == codeMap.end()) {
		
		std::cerr << "ERROR, char not in blossum62" << std::endl;
		return -1;
	}
	
	if((int)b < (int)a) {
		return blossum62[codeMap[b]][codeMap[a]];
	}
	return blossum62[codeMap[a]][codeMap[b]];
}